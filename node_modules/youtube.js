var broadcast = require('broadcast');
var BC = new broadcast.BroadCast();
module.exports = function(req, res){
    var fn = youtube_none;
    switch(req.params.action){
        case 'host': fn = youtube_host; break;
        case 'view': fn = youtube_view; break;
        case 'touch': fn = youtube_touch; break;
    };
    fn(req, res);
}
function youtube_host(req, res){
    if(!check_host(req, res)){
        res.json({error: ['Identity Error Or Login in other place'], relogin:1});
        return;
    }
    var host = req.session.host;
    var ytroom = BC.loadChannel(host.hostid, 3);
    console.log(host.nick+' change ' + req.query.vid);
    ytroom.touch();
    ytroom.postMsg(host, "msg", req.query.vid);
    res.json({info: ['Change Successfully']});
}
function youtube_view(req, res){
    if(!req.query.since){
        res.json({error: ['No since value']});
        return;
    }
    var ytroom = BC.getChannel(req.query.hostid);
    if(ytroom == null){
        res.json({error: ['Host Offline']});
        return;
    }
    var since = parseInt(req.query.since, 10);
    ytroom.readMsg(since, function(msgs){
        res.json({message: msgs});
    });
}
function youtube_touch(req, res){
    if(!check_host(req, res)){
        res.json({error: ['Identity Error Or Login in other place'], relogin:1});
        return;
    }
    var host = req.session.host;
    var ytroom = BC.loadChannel(host.hostid, 3);
    ytroom.touch();
    res.json({info: ['Touched']});
}
function youtube_none(req, res){
    res.json({error: 'Unknow Action'});
}
function check_host(req, res){
    if(!req.session.host)
        return false;
    return true;
}
