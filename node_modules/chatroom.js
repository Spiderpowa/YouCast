var broadcast = require('broadcast');
var BC = new broadcast.BroadCast({title:'Chatroom', expireUser:0.5});
global.chatroom = BC;
module.exports = function(req, res){
    var fn = chatroom_none;
    switch(req.params.action){
        case 'post': fn = chatroom_post;break;
        case 'view': fn = chatroom_view;break;
        case 'touch': fn = chatroom_touch;break;
        case 'active' : fn = chatroom_active;break;
    }
    fn(req, res);
}
function chatroom_post(req, res){
    if(!check_login(req, res)){
        res.jsonp({error: ['Not login yet'], relogin:1});
        return;
    }
    var host = req.session.host;
    var crroom = BC.loadChannel(req.query.hostid);
    var msg = req.query.msg;
    crroom.postMsg(req.session.host, "msg", msg);
    crroom.touch();
    res.jsonp({info:['Post Success']});
}
function chatroom_view(req, res){
    if(!req.query.since){
        res.jsonp({error: 'No since value'});
        return;
    }
    var crroom = BC.loadChannel(req.query.hostid);
    var since = parseInt(req.query.since, 10);
    crroom.readMsg(since, function(msgs){
        res.jsonp({message: msgs});
    });
}
function chatroom_touch(req, res){
    var crroom = BC.loadChannel(req.query.hostid);
    if(check_host(req, res)){
        crroom.touch();
    }
    if(check_login(req, res)){
        var host = req.session.host;
        crroom.touchUser(host);
    }
    res.jsonp({info:['Touch Success']});
}
function chatroom_active(req, res){
    var crroom = BC.getChannel(req.query.hostid);
    if(!crroom){
        res.jsonp({active:[]});
        return;
    }
    res.jsonp({active:crroom.getUser()});
}
function chatroom_none(req, res){
    res.jsonp({error: ['Unknow Action']});
}
function check_login(req, res){
    if(!req.session.host)
        return false;
    return true;
}
function check_host(req, res){
    if(!req.session.host || req.session.host.hostid != req.query.hostid)
        return false;
    return true;
}
